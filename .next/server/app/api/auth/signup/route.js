"use strict";(()=>{var e={};e.id=654,e.ids=[654],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},4238:(e,s,n)=>{n.r(s),n.d(s,{originalPathname:()=>h,patchFetch:()=>w,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p});var r={};n.r(r),n.d(r,{POST:()=>u});var o=n(9303),t=n(8716),a=n(670),i=n(7070),c=n(5748),l=n(3330);async function u(e){console.log("API SIGNUP: /api/auth/signup invoked");try{await (0,c.Z)();let{name:s,email:n,username:r,password:o,confirmPassword:t}=await e.json();if(!s||!n||!r||!o||!t)return i.NextResponse.json({success:!1,message:"Please fill in all required fields."},{status:400});if(o!==t)return i.NextResponse.json({success:!1,message:"Passwords do not match."},{status:400});let a=new l.Z({name:s,email:n.toLowerCase(),username:r.toLowerCase(),password:o});await a.save();let u={userId:a._id.toString(),username:a.username,name:a.name,email:a.email,createdAt:a.createdAt};return console.log("API SIGNUP: User registered successfully:",a.username),i.NextResponse.json({success:!0,message:"User registered successfully! You can now log in.",user:u},{status:201})}catch(e){if(console.error("API SIGNUP Error:",e.message),"ValidationError"===e.name){let s={};for(let n in e.errors)s[n]=e.errors[n].message;return i.NextResponse.json({success:!1,message:"Validation failed.",errors:s},{status:400})}if(11e3===e.code){let s=Object.keys(e.keyValue)[0];return s=s.charAt(0).toUpperCase()+s.slice(1),i.NextResponse.json({success:!1,message:`${s} already exists. Please choose another.`},{status:409})}return i.NextResponse.json({success:!1,message:"An unexpected error occurred during signup."},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/auth/signup/route",pathname:"/api/auth/signup",filename:"route",bundlePath:"app/api/auth/signup/route"},resolvedPagePath:"/home/sujal/Desktop/buzzly-minimal/src/app/api/auth/signup/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:g}=m,h="/api/auth/signup/route";function w(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},5748:(e,s,n)=>{n.d(s,{Z:()=>i});var r=n(1185),o=n.n(r);let t=process.env.MONGODB_URI;if(!t)throw Error("CRITICAL: MONGODB_URI is not defined. Check .env.local or environment config.");let a=global.__buzzly_minimal_mongoose_cache;a||(a=global.__buzzly_minimal_mongoose_cache={conn:null,promise:null});let i=async function(){if(a.conn){if(1===a.conn.readyState)return a.conn;console.warn(`DB: Cached connection readyState is ${a.conn.readyState}. Re-attempting.`),a.conn=null,a.promise=null}a.promise||(console.log("DB: Creating new database connection promise."),a.promise=o().connect(t,{bufferCommands:!1}).then(e=>{console.log("DB: Mongoose connected successfully via new promise!");let s=e.connection;return s.on("error",e=>{console.error("DB: Mongoose connection error event:",e),a.conn=null,a.promise=null}),s.on("disconnected",()=>{console.warn("DB: Mongoose connection disconnected event."),a.conn=null,a.promise=null}),s}).catch(e=>{throw console.error("DB: Initial mongoose.connect() promise rejected:",e.message),a.promise=null,e}));try{console.log("DB: Awaiting connection promise to resolve."),a.conn=await a.promise}catch(e){throw console.error("DB: Error awaiting connection promise:",e.message),a.promise=null,e}if(a.conn&&1===a.conn.readyState)console.log("DB: Connection active after promise resolution.");else throw console.error("DB: Post-promise, connection not active. State:",a.conn?.readyState),Error("DB: Failed to establish an active connection.");return a.conn}},3330:(e,s,n)=>{n.d(s,{Z:()=>c});var r=n(1185),o=n.n(r),t=n(2023),a=n.n(t);let i=new r.Schema({name:{type:String,required:[!0,"Please provide your name."],trim:!0,minlength:[2,"Name must be at least 2 characters long."],maxlength:[50,"Name cannot exceed 50 characters."]},email:{type:String,required:[!0,"Please provide an email address."],unique:!0,lowercase:!0,trim:!0,match:[/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,"Please provide a valid email address."]},username:{type:String,required:[!0,"Please choose a username."],unique:!0,lowercase:!0,trim:!0,minlength:[3,"Username must be at least 3 characters."],maxlength:[20,"Username cannot exceed 20 characters."],match:[/^[a-zA-Z0-9_.]+$/,"Username can only contain letters, numbers, underscores, and periods."]},password:{type:String,required:[!0,"Please create a password."],minlength:[8,"Password must be at least 8 characters."],select:!1},createdAt:{type:Date,default:Date.now}});i.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();try{let s=await a().genSalt(10);this.password=await a().hash(this.password,s),e()}catch(s){return e(s)}}),i.methods.comparePassword=async function(e){return this.password?a().compare(e,this.password):(console.error("User.comparePassword: User's password was not available for comparison. Ensure it's selected."),!1)};let c=o().models.User||o().model("User",i)}};var s=require("../../../../webpack-runtime.js");s.C(e);var n=e=>s(s.s=e),r=s.X(0,[948,972,23],()=>n(4238));module.exports=r})();