"use strict";(()=>{var e={};e.id=413,e.ids=[413],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8011:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>u,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p});var o={};n.r(o),n.d(o,{GET:()=>m});var s=n(9303),r=n(8716),a=n(670),i=n(7070),c=n(5748),l=n(2671);async function m(e,{params:t}){let{chatId:n}=t,o=e.headers.get("X-Current-User-Id");try{if(!o)return i.NextResponse.json({success:!1,message:"Auth ID required."},{status:401});if(!n||"string"!=typeof n||"undefined"===n)return i.NextResponse.json({success:!1,message:"Valid Chat ID required."},{status:400});if(!n.includes(o))return i.NextResponse.json({success:!1,message:"Forbidden."},{status:403});await (0,c.Z)();let t=(0,l.Z)(n),{searchParams:s}=new URL(e.url),r=parseInt(s.get("page")||"1",10),a=parseInt(s.get("limit")||"30",10),m=s.get("since"),d={},u={timestamp:-1};if(m)try{let e=new Date(m);if(isNaN(e.getTime()))throw Error("Invalid 'since' date format");d.timestamp={$gt:e},u={timestamp:1},console.log(`API MESSAGES: Fetching messages since ${m} for chat ${n}`)}catch(e){return i.NextResponse.json({success:!1,message:"Invalid 'since' timestamp format."},{status:400})}let p=await t.find(d).sort(u).skip(m?0:(r-1)*a).limit(a).select("_id content timestamp sender senderUsername").lean(),g=await t.countDocuments({chatId:n}),h=p.map(e=>({_id:e._id.toString(),content:e.content,timestamp:e.timestamp.toISOString(),fromUserId:e.sender.toString(),fromUsername:e.senderUsername})),f=m?h:h.reverse();return i.NextResponse.json({success:!0,messages:f,currentPage:m?1:r,totalPages:m?1:Math.ceil(g/a),totalMessages:m?h.length:g,isDeltaUpdate:!!m},{status:200})}catch(e){return console.error(`API MESSAGES (FETCH) Error for ${n}:`,e.message),i.NextResponse.json({success:!1,message:"Error fetching messages."},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/messages/[chatId]/route",pathname:"/api/messages/[chatId]",filename:"route",bundlePath:"app/api/messages/[chatId]/route"},resolvedPagePath:"/home/sujal/Desktop/buzzly-minimal/src/app/api/messages/[chatId]/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:p,serverHooks:g}=d,h="/api/messages/[chatId]/route";function f(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},5748:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(1185),s=n.n(o);let r=process.env.MONGODB_URI;if(!r)throw Error("CRITICAL: MONGODB_URI is not defined. Check .env.local or environment config.");let a=global.__buzzly_minimal_mongoose_cache;a||(a=global.__buzzly_minimal_mongoose_cache={conn:null,promise:null});let i=async function(){if(a.conn){if(1===a.conn.readyState)return a.conn;console.warn(`DB: Cached connection readyState is ${a.conn.readyState}. Re-attempting.`),a.conn=null,a.promise=null}a.promise||(console.log("DB: Creating new database connection promise."),a.promise=s().connect(r,{bufferCommands:!1}).then(e=>{console.log("DB: Mongoose connected successfully via new promise!");let t=e.connection;return t.on("error",e=>{console.error("DB: Mongoose connection error event:",e),a.conn=null,a.promise=null}),t.on("disconnected",()=>{console.warn("DB: Mongoose connection disconnected event."),a.conn=null,a.promise=null}),t}).catch(e=>{throw console.error("DB: Initial mongoose.connect() promise rejected:",e.message),a.promise=null,e}));try{console.log("DB: Awaiting connection promise to resolve."),a.conn=await a.promise}catch(e){throw console.error("DB: Error awaiting connection promise:",e.message),a.promise=null,e}if(a.conn&&1===a.conn.readyState)console.log("DB: Connection active after promise resolution.");else throw console.error("DB: Post-promise, connection not active. State:",a.conn?.readyState),Error("DB: Failed to establish an active connection.");return a.conn}},2671:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(1185),s=n.n(o);let r=new o.Schema({sender:{type:o.Schema.Types.ObjectId,ref:"User",required:!0},senderUsername:{type:String,required:!0,trim:!0},receiver:{type:o.Schema.Types.ObjectId,ref:"User",required:!0},content:{type:String,required:!0,trim:!0},timestamp:{type:Date,default:Date.now},read:{type:Boolean,default:!1}});r.index({timestamp:1},{expireAfterSeconds:259200});let a=e=>{if(!e||"string"!=typeof e||""===e.trim())throw Error("Invalid chat collection identifier provided for chat messages model.");let t=e.replace(/[^a-zA-Z0-9_]/g,"");if(0===t.length)throw Error("Sanitized collection identifier is empty.");let n=`chat_${t}_messages`;return s().models[n]?s().models[n]:s().model(n,r)}}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),o=t.X(0,[948,972],()=>n(8011));module.exports=o})();